Longest Increasing Subsequence:

Method 1: DP
1. Take an array of size same as the gievn array indicating the length of the longest increasing subsequence ending at that index.
2. Since the minimum length of longest subsequence ending at that index is 1, initalize the l(arr.size) as 1.
3. L[i]= max(L[i], L[j]+1) j<i && arr[j]<arr[i];
 and if this doesnt exist L[i]= 1

Time Complexity: O(n^2)

Method 2: O(nlogn)

Maximum Sum Increasing Subarray:

Method 1: DP
Similar to LIS, just store sum in an auxillary array instead of length stored in the above case.
